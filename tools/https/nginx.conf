
# 使用的用户和组
#user  nobody;

# 指定工作进程数
worker_processes  1;

# 可以使用 [ debug | info | notice | warn | error | crit ]  参数
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

# 指定 pid 存放的路径
#pid        logs/nginx.pid;

#-----------------------------------事件模块
events {
    #epoll是多路复用IO(I/O Multiplexing)中的一种方式,
    #仅用于linux2.6以上内核,可以大大提高nginx的性能
    use   epoll; 
    #每个worker的最大连接数
    worker_connections  1024;

}

#-----------------------------------HTTP模块 
http {
    #包含一个文件描述了：不同文件后缀对应的MIME
    include       mime.types;
    #制定默认MIME类型为二进制字节流 
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #指令 access_log 指派路径、格式和缓存大小
    #access_log  logs/access.log  main;

    #开启调用Linux的sendfile()，提供文件传输效率 
    sendfile        on;
    #是否允许使用socket的TCP_NOPUSH或TCP_CORK选项 
    #tcp_nopush     on;

    #指定客户端连接保持活动的超时时间，在这个时间之后，服务器会关掉连接。  
    #keepalive_timeout  0;
    keepalive_timeout  65;

    #设置gzip，压缩文件
    gzip  on;

    #配置一台虚拟机
    # server {
    #     listen       80;
    #     server_name  www.bingblue.com;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        # location / {
        #     root   html;
        #     index  index.html index.htm;
        #     # proxy_pass    http://localhost:80;
        #     # proxy_http_version 1.1;
        #     # proxy_set_header Upgrade $http_upgrade;
        #     # proxy_set_header Connection "upgrade";
        #     # proxy_set_header Host $host;
        # }

        #直接匹配网站根，通过域名访问网站首页比较频繁，使用这个会加速处理
        # location = / {
        #     proxy_pass https://www.bingblue.com/index
        # }
        # 处理静态文件请求，这是nginx作为http服务器的强项
        # location ^~ /public/ {
        #     root /webroot/static/;
        # }
        # 或
        # location ~* \.(gif|jpg|jpeg|png|css|js|ico)$ {
        #     root /webroot/res/;
        # }

        # location / {
        #     proxy_pass https://www.bingblue.com:3000;
        # }

        # location ^~ /new {
        #     rewrite ^/new(.*?)$ $1 break;
        #     proxy_pass https://www.bingblue.com:3001;
        # }


        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        # error_page   500 502 503 504 404  /50x.html;
        # location = /50x.html {
        #     root   html;
        # }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    # }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

    server {
       listen            80;
       server_name       www.bingblue.com;
       return            301 https://$server_name$request_uri;

    #    location / {
    #        rewrite ^ https://www.bingblue.com break;
    #    }
    }
    # HTTPS server
    #
    server {
        listen       443 ssl;
        server_name  www.bingblue.com;


        #ssl开头的属性与证书配置有关
        ssl on;
        ssl_certificate      ../cert/214319771950457.pem;
        ssl_certificate_key  ../cert/214319771950457.key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        
        ssl_ciphers               ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        # location / {
        #     root   html;
        #     index  index.html index.htm;
        # }
        location / {
            root /usr/local/src/group-company;
            # proxy_pass http://localhost:3000/;
            # proxy_set_header Host $host:80;
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ^~ /new {
            rewrite ^/new/(.*)$ /$1 break;
            proxy_pass http://localhost:3001/;
            proxy_set_header Host $host:80;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        location ^~ /company {
            # rewrite ^/new/(.*) /$1 break;
            alias /usr/local/src/group-company;
        }
        location ^~ /works {
            # rewrite ^/new/(.*)$ /$1 break;
            alias /usr/local/src/group-works;
        }
    }

}
